---

- name: dtmi:mqtt_broker
  hosts: dtmi_mqtt_broker
  become: yes
  tasks:

    - name: Update apt package cache
      ansible.builtin.apt:
        update_cache: yes


    - name: Install curl
      ansible.builtin.apt:
        name: curl
        state: present

    - name: Install apt-transport-https
      ansible.builtin.apt:
        name: apt-transport-https
        state: present

    - name: Install software-properties-common
      ansible.builtin.apt:
        name: software-properties-common
        state: present

    - name: Install mosquitto
      ansible.builtin.apt:
        name: mosquitto
        state: present


    - name: Install telegraf
      shell: |
        wget -q https://repos.influxdata.com/influxdata-archive_compat.key
        echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
        echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
        apt update && apt install telegraf -y


    - name: Create folder /conf
      ansible.builtin.file:
        path: /conf
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/mosquitto.conf
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/mosquitto.conf
        dest: /conf/mosquitto.conf
        mode: o+rw

    - name: Create folder /etc/systemd/system
      ansible.builtin.file:
        path: /etc/systemd/system
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_mqtt_broker_command_service_0.service
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_mqtt_broker_command_service_0.service
        dest: /etc/systemd/system/dtmi_mqtt_broker_command_service_0.service
        mode: o+rwx

    - name: Create folder /etc/systemd/system
      ansible.builtin.file:
        path: /etc/systemd/system
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_mqtt_broker_command_service_1.service
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_mqtt_broker_command_service_1.service
        dest: /etc/systemd/system/dtmi_mqtt_broker_command_service_1.service
        mode: o+rwx

    - name: Create folder /telegraf_conf
      ansible.builtin.file:
        path: /telegraf_conf
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/telegraf_configs/telegraf_dtmi_mqtt_broker.conf
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/telegraf_configs/telegraf_dtmi_mqtt_broker.conf
        dest: /telegraf_conf/remote_telegraf.conf
        mode: o+rw


    - name: Run Command 0
      ansible.builtin.service:
        name: dtmi_mqtt_broker_command_service_0.service
        daemon_reload: true
        state: restarted
    - name: Run Command 1
      ansible.builtin.service:
        name: dtmi_mqtt_broker_command_service_1.service
        daemon_reload: true
        state: restarted

- name: dtmi:scba_42
  hosts: dtmi_scba_42
  become: yes
  tasks:

    - name: Update apt package cache
      ansible.builtin.apt:
        update_cache: yes


    - name: Install curl
      ansible.builtin.apt:
        name: curl
        state: present

    - name: Install apt-transport-https
      ansible.builtin.apt:
        name: apt-transport-https
        state: present

    - name: Install software-properties-common
      ansible.builtin.apt:
        name: software-properties-common
        state: present

    - name: Install python3
      ansible.builtin.apt:
        name: python3
        state: present

    - name: Install python3-pip
      ansible.builtin.apt:
        name: python3-pip
        state: present


    - name: Install telegraf
      shell: |
        wget -q https://repos.influxdata.com/influxdata-archive_compat.key
        echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
        echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
        apt update && apt install telegraf -y


    - name: Create folder /sensors
      ansible.builtin.file:
        path: /sensors
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/tcp_receiver.py
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/tcp_receiver.py
        dest: /sensors/tcp_receiver.py
        mode: o+rwx

    - name: Create folder /sensors
      ansible.builtin.file:
        path: /sensors
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/tcp_sender.py
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/tcp_sender.py
        dest: /sensors/tcp_sender.py
        mode: o+rwx

    - name: Create folder /sensors
      ansible.builtin.file:
        path: /sensors
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/scba_simulator.py
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/scba_simulator.py
        dest: /sensors/start.py
        mode: o+rwx

    - name: Create folder /etc/systemd/system
      ansible.builtin.file:
        path: /etc/systemd/system
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_scba_42_command_service_0.service
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_scba_42_command_service_0.service
        dest: /etc/systemd/system/dtmi_scba_42_command_service_0.service
        mode: o+rwx

    - name: Create folder /etc/systemd/system
      ansible.builtin.file:
        path: /etc/systemd/system
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_scba_42_command_service_2.service
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_scba_42_command_service_2.service
        dest: /etc/systemd/system/dtmi_scba_42_command_service_2.service
        mode: o+rwx

    - name: Create folder /telegraf_conf
      ansible.builtin.file:
        path: /telegraf_conf
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/telegraf_configs/telegraf_dtmi_scba_42.conf
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/telegraf_configs/telegraf_dtmi_scba_42.conf
        dest: /telegraf_conf/remote_telegraf.conf
        mode: o+rw


    - name: Run Command 0
      ansible.builtin.service:
        name: dtmi_scba_42_command_service_0.service
        daemon_reload: true
        state: restarted
    - name: Run Command 1
      ansible.builtin.shell: "pip install paho-mqtt"
    - name: Run Command 2
      ansible.builtin.service:
        name: dtmi_scba_42_command_service_2.service
        daemon_reload: true
        state: restarted

- name: dtmi:scba_42_control
  hosts: dtmi_scba_42_control
  become: yes
  tasks:

    - name: Update apt package cache
      ansible.builtin.apt:
        update_cache: yes


    - name: Install curl
      ansible.builtin.apt:
        name: curl
        state: present

    - name: Install apt-transport-https
      ansible.builtin.apt:
        name: apt-transport-https
        state: present

    - name: Install software-properties-common
      ansible.builtin.apt:
        name: software-properties-common
        state: present

    - name: Install python3
      ansible.builtin.apt:
        name: python3
        state: present

    - name: Install python3-pip
      ansible.builtin.apt:
        name: python3-pip
        state: present


    - name: Install telegraf
      shell: |
        wget -q https://repos.influxdata.com/influxdata-archive_compat.key
        echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
        echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
        apt update && apt install telegraf -y


    - name: Create folder /scripts
      ansible.builtin.file:
        path: /scripts
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/tcp_receiver.py
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/tcp_receiver.py
        dest: /scripts/tcp_receiver.py
        mode: o+rwx

    - name: Create folder /scripts
      ansible.builtin.file:
        path: /scripts
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/tcp_sender.py
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/tcp_sender.py
        dest: /scripts/tcp_sender.py
        mode: o+rwx

    - name: Create folder /scripts
      ansible.builtin.file:
        path: /scripts
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/scba_control.py
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/scba_control.py
        dest: /scripts/start.py
        mode: o+rwx

    - name: Create folder /etc/systemd/system
      ansible.builtin.file:
        path: /etc/systemd/system
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_scba_42_control_command_service_0.service
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_scba_42_control_command_service_0.service
        dest: /etc/systemd/system/dtmi_scba_42_control_command_service_0.service
        mode: o+rwx

    - name: Create folder /etc/systemd/system
      ansible.builtin.file:
        path: /etc/systemd/system
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_scba_42_control_command_service_2.service
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_scba_42_control_command_service_2.service
        dest: /etc/systemd/system/dtmi_scba_42_control_command_service_2.service
        mode: o+rwx

    - name: Create folder /telegraf_conf
      ansible.builtin.file:
        path: /telegraf_conf
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/telegraf_configs/telegraf_dtmi_scba_42_control.conf
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/telegraf_configs/telegraf_dtmi_scba_42_control.conf
        dest: /telegraf_conf/remote_telegraf.conf
        mode: o+rw


    - name: Run Command 0
      ansible.builtin.service:
        name: dtmi_scba_42_control_command_service_0.service
        daemon_reload: true
        state: restarted
    - name: Run Command 1
      ansible.builtin.shell: "pip install paho-mqtt"
    - name: Run Command 2
      ansible.builtin.service:
        name: dtmi_scba_42_control_command_service_2.service
        daemon_reload: true
        state: restarted

- name: dtmi:influx_grafana
  hosts: dtmi_influx_grafana
  become: yes
  tasks:

    - name: Update apt package cache
      ansible.builtin.apt:
        update_cache: yes


    - name: Install curl
      ansible.builtin.apt:
        name: curl
        state: present

    - name: Install apt-transport-https
      ansible.builtin.apt:
        name: apt-transport-https
        state: present

    - name: Install software-properties-common
      ansible.builtin.apt:
        name: software-properties-common
        state: present

    - name: Install curl
      ansible.builtin.apt:
        name: curl
        state: present

    - name: Install influxdb
      ansible.builtin.apt:
        name: influxdb
        state: present

    - name: Install wget
      ansible.builtin.apt:
        name: wget
        state: present

    - name: Install python3
      ansible.builtin.apt:
        name: python3
        state: present


    - name: Install telegraf
      shell: |
        wget -q https://repos.influxdata.com/influxdata-archive_compat.key
        echo '393e8779c89ac8d958f81f942f9ad7fb82a25e133faddaf92e15b16e6ac9ce4c influxdata-archive_compat.key' | sha256sum -c && cat influxdata-archive_compat.key | gpg --dearmor | tee /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg > /dev/null
        echo 'deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/debian stable main' | tee /etc/apt/sources.list.d/influxdata.list
        apt update && apt install telegraf -y


    - name: Create folder /scripts
      ansible.builtin.file:
        path: /scripts
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/init_grafana2.py
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/files/init_grafana2.py
        dest: /scripts/init_grafana.py
        mode: o+rwx

    - name: Create folder /etc/systemd/system
      ansible.builtin.file:
        path: /etc/systemd/system
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_influx_grafana_command_service_0.service
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/services/dtmi_influx_grafana_command_service_0.service
        dest: /etc/systemd/system/dtmi_influx_grafana_command_service_0.service
        mode: o+rwx

    - name: Create folder /telegraf_conf
      ansible.builtin.file:
        path: /telegraf_conf
        state: directory
    - name: Copy file /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/telegraf_configs/telegraf_dtmi_influx_grafana.conf
      ansible.builtin.copy:
        src: /mnt/d/Documents/NextcloudSynch/Documents/Uni/Masterarbeit/geordnet/Arbeit/lehre_ma_202304_streichhahn/bsp_setup_presentation/output/telegraf_configs/telegraf_dtmi_influx_grafana.conf
        dest: /telegraf_conf/remote_telegraf.conf
        mode: o+rw


    - name: Run Command 0
      ansible.builtin.service:
        name: dtmi_influx_grafana_command_service_0.service
        daemon_reload: true
        state: restarted
    - name: Run Command 1
      ansible.builtin.service:
        name: influxdb
        daemon_reload: true
        state: restarted
    - name: Run Command 2
      ansible.builtin.shell: "mkdir -p /etc/apt/keyrings/"
    - name: Run Command 3
      ansible.builtin.shell: "wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | tee /etc/apt/keyrings/grafana.gpg > /dev/null"
    - name: Run Command 4
      ansible.builtin.shell: "echo 'deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main' | tee -a /etc/apt/sources.list.d/grafana.list"
    - name: Run Command 5
      ansible.builtin.shell: "apt-get update"
    - name: Run Command 6
      ansible.builtin.shell: "apt-get install grafana -y"
    - name: Run Command 7
      ansible.builtin.service:
        name: influxd
        daemon_reload: true
        state: restarted
    - name: Run Command 8
      ansible.builtin.service:
        name: grafana-server
        daemon_reload: true
        state: restarted
    - name: Run Command 9
      ansible.builtin.shell: "sleep 10"
    - name: Run Command 10
      ansible.builtin.shell: "python3 /scripts/init_grafana.py"