# THIS SCRIPT WAS GENERATED BY CHAT GPT
import socket
import threading

class tcp_receiver:
    def __init__(self, host, port, message_handler):
        self.host = host
        self.port = port
        self.socket = None
        self.clients = []
        self.message_handler = message_handler

    def start(self):
        self.server_thread = threading.Thread(target=self._start_server)
        self.server_thread.start()

    def _start_server(self):
        self.socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.socket.bind((self.host, self.port))
        self.socket.listen(5)
        print(f"Server listening on {self.host}:{self.port}")

        while True:
            client_socket, client_address = self.socket.accept()
            client_handler = threading.Thread(target=self.handle_client, args=(client_socket,))
            client_handler.start()
            self.clients.append(client_socket)

    def handle_client(self, client_socket):
        while True:
            try:
                data = client_socket.recv(1024)
                if not data:
                    client_socket.close()
                    self.clients.remove(client_socket)
                    break
                message = data.decode()
                self.message_handler(message)
            except Exception as e:
                print(f"Error handling message: {e}")
                break
